// [Таймери](timers) прзначені для відслідковування часу
// до якої-небудь одноразової події в майбутньому -
// _маятники_ ж призначені для виконання події через
// чітко задані інтервали. Ось пряклад маятника що маякує
// нам, аж поки ми його не зупинемо.

package main

import "time"
import "fmt"

func main() {

    // Маятники використовують схожий до таймерів механізм -
    // канал до якого надсилаються значення. Ось ми використаємо
    // `range` для канала маятника і будемо виводити значення
    // відразу як вони прибуватимуть, приблизно раз в пів секунди.
    ticker := time.NewTicker(500 * time.Millisecond)
    go func() {
        var f = "15:04:05.999999999"
        for t := range ticker.C {
            fmt.Println("Коливання @", t.Format(f))
        }
    }()

    // Маятники можуть бути зупинені так само як і таймери. Після
    // того як таймер зупинено він не буде отримувати жодних
    // значень з каналу. Наш - ми зупинемо через 1600мілісекунд.
    time.Sleep(1600 * time.Millisecond)
    ticker.Stop()
    fmt.Println("Маятник зупинено")
}
