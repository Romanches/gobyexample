<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go за Прикладом: Сортування функціями</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script type="text/javascript">
    if (window.location.host == "gobyexample.com") {}
  </script>
  <body>
    <div class="example" id="sorting-by-functions">
      <h2><a href="./">Go за Прикладом</a>: Сортування функціями</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Інколи ми можемо бажати сортувати колекцію данних за
чомось іншим крім натурального порядоку. Наприклад, нам
потрібно відсортувати  рядки за довжиною напротивагу
сортуванню по алфавіту, наступний приклад, як це можна
зробити в Go.</p>

          </td>
          <td class="code empty leading">
	        
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        <a href="http://play.golang.org/p/Mt4fJYYD4WL"><img title="Run code" src="play.png" class="run" /></a>
            <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;sort&quot;</span>
<span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Щоб відсотувати щось за власними правилами в Go, нам
спочатку треба мати це &ldquo;шось&rdquo;. Ми створюємо тип <code>byLength</code>
(заДовжиною) який є превдонімом до вбудованого типу -
зріз рядків <code>[]string</code>.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kd">type</span> <span class="nx">byLength</span> <span class="p">[]</span><span class="kt">string</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Нам необхідно реалізувати <code>sort.Interface</code>, тобто створити методи
<code>Len</code>, <code>Less</code> та <code>Swap</code> - що будуть оперувати на нашому типі данних,
що дозволить нам використати узагальнену функцію <code>Sort</code> пакунка <code>sort</code>.
<code>Len</code> та <code>Swap</code> зазвичай будуть схожими на інші свої аналоги.
Найбільш відрізнятись буде  <code>Less</code>, вона буде реалізовувати власну
логіку сортування, яка в нашому випадку полягає в порівнянні довжини
рядків.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kd">func</span> <span class="p">(</span><span class="nx">s</span> <span class="nx">byLength</span><span class="p">)</span> <span class="nx">Len</span><span class="p">()</span> <span class="kt">int</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span>
<span class="p">}</span>
<span class="kd">func</span> <span class="p">(</span><span class="nx">s</span> <span class="nx">byLength</span><span class="p">)</span> <span class="nx">Swap</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">j</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">s</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="nx">s</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span> <span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
<span class="p">}</span>
<span class="kd">func</span> <span class="p">(</span><span class="nx">s</span> <span class="nx">byLength</span><span class="p">)</span> <span class="nx">Less</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">j</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">j</span><span class="p">])</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>З готовими, ми нарешті можемо реалізувати наше власне
сортування за допомогою конвертації початкового зрізу <code>fruits</code>
у зріз <code>byLength</code> (заДовжиною), і використання <code>sort.Sort</code> до
цього типу данних.</p>

          </td>
          <td class="code">
	        
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fruits</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;персик&quot;</span><span class="p">,</span> <span class="s">&quot;банан&quot;</span><span class="p">,</span> <span class="s">&quot;ківі&quot;</span><span class="p">}</span>
    <span class="nx">sort</span><span class="p">.</span><span class="nx">Sort</span><span class="p">(</span><span class="nx">byLength</span><span class="p">(</span><span class="nx">fruits</span><span class="p">))</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">fruits</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Запуск нашої программи покаже список фруктів
відсортований за довжиною рядка.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="gp">$</span> go run sorting-by-functions.go
<span class="go">[ківі банан персик]</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Створючи новий тип данних, реалізуючи три методи
інтерфейсу <code>sort.Interface</code> по відношенню до цього
типу данних і викликаючи sort.Sort з новоствореним
типом данних переданим їй аргументом - ми можемо
сортувати власні типи використовуючи власні методи.</p>

          </td>
          <td class="code empty">
	        
            
          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Наступний приклад: <a href="panic">Паніка</a>.
      </p>
      
      <p class="footer">
        Створено <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | Перекладено <a href="https://twitter.com/butuzov">@butuzov</a> | <a href="mailto:butuzov@made.ua">відгук</a> | <a href="https://github.com/butuzov/gobyexample/blob/ukrainian/examples/sorting-by-functions">source</a> | <a href="https://github.com/butuzov/gobyexample#license">ліцензія</a>
      </p>
    </div>
  </body>
</html>
