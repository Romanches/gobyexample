<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go за Прикладом: Кодування Base64</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script type="text/javascript">
    if (window.location.host == "gobyexample.com") {}
  </script>
  <body>
    <div class="example" id="base64-encoding">
      <h2><a href="./">Go за Прикладом</a>: Кодування Base64</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Go підтримує кодування/декодування
<a href="https://uk.wikipedia.org/wiki/Base64">base64</a>.</p>

          </td>
          <td class="code empty leading">
	        
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        <a href="http://play.golang.org/p/Bpoo1MLtfjq"><img title="Run code" src="play.png" class="run" /></a>
            <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>За допомогою цього синтаксису ми імпортуємо пакет
<code>encoding/base64</code> до якого будемо звертатись, як
до <code>b64</code> замість стандартного звернення <code>base64</code>.
Це дозволить нам зберегти трошка місяця під час
програмування.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kn">import</span> <span class="nx">b64</span> <span class="s">&quot;encoding/base64&quot;</span>
<span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Це рядок який ми будемо кодувати та декодувати.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">data</span> <span class="o">:=</span> <span class="s">&quot;abc123!?$*&amp;()&#39;-=@~&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Go підтриму як стандартну так і URL-сумісну base64.
Спочатку приведемо приклад як використовувати
стандартне base64. Механізм кодування потребує зріз
байтів, отож ми сконвернуємо наш рядом до потрібного типу.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">sEnc</span> <span class="o">:=</span> <span class="nx">b64</span><span class="p">.</span><span class="nx">StdEncoding</span><span class="p">.</span><span class="nx">EncodeToString</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">sEnc</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Розкодування може повертати помилку, яку ви можете перевірити
якщо ви не знаєте напевне чи була вхідний (не закодований)
рядок привально сформований.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">sDec</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">b64</span><span class="p">.</span><span class="nx">StdEncoding</span><span class="p">.</span><span class="nx">DecodeString</span><span class="p">(</span><span class="nx">sEnc</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">sDec</span><span class="p">))</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>А це ми кодуємо за допомогою URL-сумісного base64.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">uEnc</span> <span class="o">:=</span> <span class="nx">b64</span><span class="p">.</span><span class="nx">URLEncoding</span><span class="p">.</span><span class="nx">EncodeToString</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">data</span><span class="p">))</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">uEnc</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Розкодовуємо, аналогічно тому, як ми використовували
стандартне кодування base64, кількома рядками вище.</p>

          </td>
          <td class="code">
	        
            <div class="highlight"><pre>    <span class="nx">uDec</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">b64</span><span class="p">.</span><span class="nx">URLEncoding</span><span class="p">.</span><span class="nx">DecodeString</span><span class="p">(</span><span class="nx">uEnc</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">uDec</span><span class="p">))</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Рядок кодується трохи по-різному при використанні
стандартного енкодера та енкодера URL (різниця полягає
в закриваючому символі <code>+</code> та <code>-</code>), але зворотні
результати кодування відповідають оригінальному рядку,
як і було задумано.</p>

          </td>
          <td class="code">
	        
            <div class="highlight"><pre><span class="gp">$</span> go run base64-encoding.go
<span class="go">YWJjMTIzIT8kKiYoKSctPUB+</span>
<span class="go">abc123!?$*&amp;()&#39;-=@~</span>
<span class="go">YWJjMTIzIT8kKiYoKSctPUB-</span>
<span class="go">abc123!?$*&amp;()&#39;-=@~</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Наступний приклад: <a href="reading-files">Reading Files</a>.
      </p>
      
      <p class="footer">
        Створено <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | Перекладено <a href="https://twitter.com/butuzov">@butuzov</a> | <a href="mailto:butuzov@made.ua">відгук</a> | <a href="https://github.com/butuzov/gobyexample/blob/ukrainian/examples/base64-encoding">source</a> | <a href="https://github.com/butuzov/gobyexample#license">ліцензія</a>
      </p>
    </div>
  </body>
</html>
