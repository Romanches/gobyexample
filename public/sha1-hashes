<!DOCTYPE html>
<html>
<head>
	<meta http-eqiv="content-type" content="text/html;charset=utf-8" />
	<title>Go за Прикладом: SHA1 Хеші</title>
	<link rel=stylesheet href="site.css" />
	<script async src="https://www.googletagmanager.com/gtag/js?id=UA-75170058-3"></script>
	<script type="text/javascript">
	if (window.location.host == "gobyexample.com.ua") {
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js',      new Date());
		gtag('config', 'UA-75170058-3');
	}
	</script>
</head>
<body>
	<div class="example" id="sha1-hashes">
	<h2><a href="./">Go за Прикладом</a>: SHA1 Хеші</h2>

	<p class="warning">Work in Progress / Сайт в процесі розробки</p>

	
	<table>
		
		<tr>
			<td class="docs"><p><a href="https://uk.wikipedia.org/wiki/SHA-1">хеші <em>SHA1</em></a> часто
використовуються для визначення коротких ідентифікаторій
для двійкових або текстових шматків. Наприклад,
<a href="http://git-scm.com/">система контролю версій git </a> широко
використовує SHA1s для ідентифікації файлів та директорій.
Ось як можна обчислити SHA1 хеші в Go.</p>
</td>
			<td class="code empty leading">
			
			
			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			<a href="http://play.golang.org/p/lt215f2zw_w"><img title="Run code" src="play.png" class="run" /></a>
			<div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Go
Go реалізує кілька функцій хешування у різноманітних пакетах
<code>crypto/*</code>.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;crypto/sha1&quot;</span>
<span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">s1</span> <span class="o">:=</span> <span class="s">&quot;це рядок sha1&quot;</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Шаблон для генерації хешу наступний <code>sha1.New()</code>,
<code>sha1.Write(bytes)</code>, і наостанок <code>sha1.Sum([]byte{})</code>.
Давайте почнемо з генерації нового хешу.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">h</span> <span class="o">:=</span> <span class="nx">sha1</span><span class="p">.</span><span class="nx">New</span><span class="p">()</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p><code>Write</code> очікує байти. Якщо у вас є строка <code>s1</code>,
скористайтесь <code>[]byte(s)</code> для конвертації її в байти.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">h</span><span class="p">.</span><span class="nx">Write</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">s1</span><span class="p">))</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Результатом цієї операції буде очікуваний хеш у вигляді
зрізу байтів, який ми можемо представити у вигляді рядка.
Аргумент до <code>Sum</code> може бути використано, для того щоб
до нього додати отриманий зріз байтів нашого хешу,
але насправді така операція зазвичай не потрібна.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">bs1</span> <span class="o">:=</span> <span class="nx">h</span><span class="p">.</span><span class="nx">Sum</span><span class="p">(</span><span class="kc">nil</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>SHA1 значення дуже часто подаються у шістнадцятирічному
вигляді, напирклад у git commit&rsquo;ах. Скористайтесь
дієсловом форматування <code>%x</code> щоб сконвертувати хеш результат
в шістнадцятирічний рядок.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s1</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%x\n&quot;</span><span class="p">,</span> <span class="nx">bs1</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>А, можна скористатись функцієї обгорткою <code>sha1.Sum</code>
що відразу надасть вам потрібний хеш у вигляді байтового зрізу.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre>    <span class="nx">s2</span> <span class="o">:=</span> <span class="s">&quot;використай sha1.Sum([]byte)&quot;</span>
    <span class="nx">bs2</span> <span class="o">:=</span> <span class="nx">sha1</span><span class="p">.</span><span class="nx">Sum</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="nx">s2</span><span class="p">))</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">s2</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%x\n&quot;</span><span class="p">,</span> <span class="nx">bs2</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	
	<table>
		
		<tr>
			<td class="docs"><p>Запуск цієї программи порахуує хеш та надрукує його у
форматі зрозумілому для людського ока.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="gp">$</span> go run sha1-hashes.go
<span class="go">це рядок sha1</span>
<span class="go">afa57c30c2333a0a4bccd5d7292efc211f07e510</span>
<span class="go">використай sha1.Sum([]byte)</span>
<span class="go">5f0d608c5a8be56c733b6113d6161198f687436c</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Ви можете обчислювати і інші хеші використовуючи схожий
до вище приведеного сценарій. Наприклад, щоб порахувати
MD5 хеші імпортуйте <code>crypto/md5</code> і скористайтесь <code>md5.New()</code>
(або <code>md5.Sum([]byte)</code> що трошка коротше).</p>
</td>
			<td class="code empty leading">
			
			
			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Зауважте що якщо вам потрібні криптографічно безпечні
хеші вам потрібно провести уважне дослідження
<a href="https://uk.wikipedia.org/wiki/Криптографічна_хеш-функція">їх надійності</a>!</p>
</td>
			<td class="code empty">
			
			
			</td>
		</tr>
	
	</table>
	


	<p class="next">
		Наступний приклад: <a href="base64-encoding">Кодування Base64</a>.
	</p>

<p class="footer">
Автор <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | Переклад <a href="https://twitter.com/butuzov">@butuzov</a> | <a href="https://github.com/butuzov/gobyexample/blob/ukrainian/examples/sha1-hashes">source</a> | <a href="https://github.com/butuzov/gobyexample#license">ліцензія</a>
</p>
</div>
</body>
</html>
